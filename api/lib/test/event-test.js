// Generated by CoffeeScript 1.7.1
(function() {
  var DeviceTest, _Base, _async, _entity,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _Base = require('./base-test');

  _entity = require('../entity/events');

  _async = require('async');

  DeviceTest = (function(_super) {
    __extends(DeviceTest, _super);

    function DeviceTest() {
      DeviceTest.__super__.constructor.call(this, 'events');
    }

    DeviceTest.prototype.save = function(cb) {
      var data;
      data = this.generateLawData();
      return _entity.saveOnlyOne(data, function(err, result) {
        return cb();
      });
    };

    DeviceTest.prototype.mulSave = function() {
      var index, queue, self, _i;
      self = this;
      queue = [];
      for (index = _i = 0; _i <= 1000; index = ++_i) {
        queue.push(function(next) {
          return self.save(next);
        });
      }
      return _async.whilst(function() {
        return queue.length;
      }, function(cb) {
        var action;
        action = queue.pop();
        return action(cb);
      }, function() {
        return console.log(1);
      });
    };

    DeviceTest.prototype.find = function() {
      var query;
      query = {
        device: "abc1",
        browser: "abc1"
      };
      return _entity.findSupport(query).then(function(rows) {
        return console.log(rows);
      });
    };

    DeviceTest.prototype.tasks = function() {
      return ['find'];
    };

    return DeviceTest;

  })(_Base);

  module.exports = new DeviceTest();

}).call(this);

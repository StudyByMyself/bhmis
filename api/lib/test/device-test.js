// Generated by CoffeeScript 1.7.1
(function() {
  var DeviceTest, _Base, _entity,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _Base = require('./base-test');

  _entity = require('../entity/device');

  DeviceTest = (function(_super) {
    __extends(DeviceTest, _super);

    function DeviceTest() {
      DeviceTest.__super__.constructor.call(this, 'device');
    }

    DeviceTest.prototype.save = function() {
      var data, sql;
      data = this.generateSameTestData();
      sql = _entity.save(data);
      return sql.then(function() {
        return console.log(arguments);
      });
    };

    DeviceTest.prototype.findAll = function() {
      return _entity.findAll().then(function(rows) {
        return console.log(rows);
      });
    };

    DeviceTest.prototype.find = function() {
      var query;
      query = {
        browser: "browser2"
      };
      return _entity.find(query).then(function(rows) {
        return console.log(rows);
      });
    };

    DeviceTest.prototype.generateTestData = function() {
      return DeviceTest.__super__.generateTestData.apply(this, arguments);
    };

    DeviceTest.prototype.getDistinctValue = function() {
      return _entity.getDistinctValue('ua1').then(function(rows) {
        return console.log(rows);
      });
    };

    DeviceTest.prototype.tasks = function() {
      return ['save'];
    };

    return DeviceTest;

  })(_Base);

  module.exports = new DeviceTest();

}).call(this);

// Generated by CoffeeScript 1.7.1
(function() {
  var Base, _crypto, _uuid;

  _crypto = require('crypto');

  _uuid = require('node-uuid');

  Base = (function() {
    function Base(table) {
      this.table = table;
    }

    Base.prototype.generateTestData = function() {
      var data, key, schema, vlaue, _ref;
      schema = require("../schema/" + this.table);
      data = {};
      _ref = schema.fields;
      for (key in _ref) {
        vlaue = _ref[key];
        data[key] = this.generateString();
      }
      data.timestamp = new Date().getTime();
      return data;
    };

    Base.prototype.generateSameTestData = function() {
      var data, key, schema, vlaue, _ref;
      schema = require("../schema/" + this.table);
      data = {};
      _ref = schema.fields;
      for (key in _ref) {
        vlaue = _ref[key];
        data[key] = "abc";
      }
      return data;
    };

    Base.prototype.generateString = function(length) {
      if (length == null) {
        length = 8;
      }
      return _uuid.unparse(_crypto.pseudoRandomBytes(length)).substr(0, length);
    };

    Base.prototype.generateRandomNumber = function(number) {
      if (number == null) {
        number = 1000;
      }
      return Math.ceil(Math.random() * number);
    };

    Base.prototype.generateLawData = function() {
      var data, key, schema, value, _ref;
      schema = require("../schema/" + this.table);
      data = {};
      _ref = schema.fields;
      for (key in _ref) {
        value = _ref[key];
        data[key] = "abc" + (this.generateRandomNumber(5));
      }
      return data;
    };

    return Base;

  })();

  module.exports = Base;

}).call(this);

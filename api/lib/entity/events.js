// Generated by CoffeeScript 1.7.1
(function() {
  var Events, _Base, _async,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _async = require('async');

  _Base = require('./base');

  Events = (function(_super) {
    __extends(Events, _super);

    function Events() {
      Events.__super__.constructor.call(this, 'events');
    }

    Events.prototype.saveOnlyOne = function(data, cb) {
      var queue, self;
      self = this;
      queue = [];
      queue.push(function(next) {
        return self.find(data).then(function(rows) {
          if (rows.length) {
            return cb && cb();
          }
          return next();
        });
      });
      queue.push(function(next) {
        return self.save(data).then(function(id) {
          return next(null, id);
        })["catch"](function(error) {
          return next(error);
        });
      });
      return _async.waterfall(queue, function(err, result) {
        return cb && cb(err, result);
      });
    };

    Events.prototype.findSupport = function(data) {
      var query;
      query = {
        device: "",
        browser: ""
      };
      this._valueCopy(query, data);
      return this.knex.select('support').where(query).from(this.table);
    };

    return Events;

  })(_Base);

  module.exports = new Events();

}).call(this);
